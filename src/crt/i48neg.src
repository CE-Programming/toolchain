; Performs 48-bit unary minus
;
; Returns:
; ude:uhl = -ude:uhl

	assume	adl=1

	section	.text
	public	__i48neg
__i48neg:
; CC: 17 bytes
; HL != 0: 18F + 3R + 2
; HL == 0: 16F + 3R + 2
	or	a, a
	sbc	hl, de		; hl = HL - DE
	ex	de, hl		; hl = DE, de = HL - DE
	add	hl, de		; hl = HL
	add	hl, de		; hl = HL * 2 - DE
	ex	de, hl		; hl = HL - DE, de = HL * 2 - DE
	or	a, a
	sbc	hl, de		; hl = -HL, set Z flag
	ex	de, hl		; hl = HL * 2 - DE, de = -HL
	add	hl, de		; hl = HL - DE
	add	hl, de		; hl = -DE
	ex	de, hl		; hl = -HL, de = -DE
	ret	z		; Return if -HL = 0, meaning no carry when negating the low half
	dec	de		; Carry adjustment
	ret

; Used by i48divs and i48rems, uiy:ubc = -uiy:ubc
	public	__uiyubcNeg
__uiyubcNeg:
; CC: 18 bytes | 19F + 12R + 9W + 1
	push	hl
	or	a, a
	sbc	hl, hl
	sbc	hl, bc		; hl = 0 - BC = -BC
	push	hl
	add	hl, bc		; hl = 0, causes the same carry
	lea	bc, iy
	sbc	hl, bc		; hl = 0 - IY - c
	pop	bc		; bc = -BC
	ex	(sp), hl	; hl = HL
	pop	iy		; iy = -IY - c
	ret
