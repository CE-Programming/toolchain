; Performs signed 48 bit shift right
; 
; Arguments:
; ude = Most significant bytes of arg 1
; uhl = Least significant bytes of arg 1
; c = Amount to shift by


; Returns:
; ude:uhl = ude:uhl>>c

	assume	adl=1

	section	.text
	public	__i48shrs
	public __i48shrs.midloop
__i48shrs:
	inc c
	dec c
	ret z
	push bc
	ld b, c
	push de
	push hl
.loop:
	ld hl, 5
	add hl, sp
	
	sra (hl)
	dec hl
.midloop: ; Used to enter from i48shru
	rr (hl)
	dec hl
	rr (hl)
	dec hl
	rr (hl)
	dec hl
	rr (hl)
	dec hl
	rr (hl)

	djnz .loop

	pop hl
	pop de
	pop bc
	ret