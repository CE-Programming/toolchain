; Performs signed 48 bit shift right
; 
; Arguments:
; ude = Most significant bytes of arg 1
; uhl = Least significant bytes of arg 1
; c = Amount to shift by


; Returns:
; ude:uhl = ude:uhl>>c

	assume	adl=1

	section	.text
	public	__i48shrs
	public __i48shrs.midloop
__i48shrs:
	inc c
	dec c
	ret z
	push ix
	ld ix, 0
	add ix, sp
	push bc
	ld b, c
	push af
	push de
	push hl
	ld c, (ix-7)
	ld a, (ix-10)
.loop:
	sra c
.midloop:
	rr d
	rr e
	rra
	rr h
	rr l
	djnz .loop
	ld (ix-12), hl
	ld (ix-9), de
	ld (ix-7), c
	ld (ix-10), a
	pop hl
	pop de
	pop af
	pop bc
	pop ix
	ret