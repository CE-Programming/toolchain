	assume	adl=1

	section	.text
	public	__sdvrmu
__sdvrmu:
; I: HL=dividend, BC=divisor
; O: a=0, ude=HL/BC, uhl=HL%BC

	push	hl
	dec	sp
	pop	de
	inc	sp
	ld	e, 0

	inc	bc
	dec.s	bc

	push	af
	ld	a, 16

if PREFER_OS_CRT
	require	__idvrmu_common
else
	jr	__idvrmu_common
end if

	section	.text
	public	__idvrmu

if PREFER_OS_CRT

__idvrmu := 000144h

else

__idvrmu:
; I: UHL=dividend, UBC=divisor
; O: ude=UHL/UBC, uhl=UHL%UBC

	ex	de, hl

	push	af
	ld	a, 24
	require	__idvrmu_common

end if

	section	.text
	private	__idvrmu_common
__idvrmu_common:

	or	a, a
	sbc	hl, hl

.loop:
	ex	de, hl
	add	hl, hl
	ex	de, hl
	adc	hl, hl

	sbc	hl, bc
	inc	e

	jr	nc, .restore_skip
	add	hl, bc
	dec	e
.restore_skip:

	dec	a
	jr	nz, .loop

	pop	af
	ret
