; Performs 48-bit shift left
;
; Returns:
; ude:uhl = ude:uhl<<c

assume	adl=1

	section	.text
	public	__i48shl
__i48shl:
	bit	0, c
	jr	z, .bit0
	; ude:uhl<<1
	add hl, hl
	ex de, hl
	adc hl, hl
	ex de, hl
.bit0:
	bit	1, c
	jr	z, .bit1
	; ude:uhl<<2
	add hl, hl
	ex de, hl
	adc hl, hl
	ex de, hl
	add hl, hl
	ex de, hl
	adc hl, hl
	ex de, hl
.bit1:
	bit	2, c
	jr	z, .bit2
	; ude:uhl<<4
	add hl, hl
	ex de, hl
	adc hl, hl
	ex de, hl
	add hl, hl
	ex de, hl
	adc hl, hl
	ex de, hl
	add hl, hl
	ex de, hl
	adc hl, hl
	ex de, hl
	add hl, hl
	ex de, hl
	adc hl, hl
	ex de, hl
.bit2:
	; set up stack stuff for later
	push ix
	ld ix, 0
	push de
	push hl
	push ix
	push ix
	add ix, sp
	
	bit	3, c
	jr	z, .bit3
	; ude:uhl<<8
	dec ix
.bit3:
	bit 4, c
	jr z, .bit4
	; ude:uhl<<16
	lea ix, ix-2
.bit4:
	bit 5, c
	jr z, .finish
	; ude:uhl<<32
	lea ix, ix-4
.finish:
	ld de, (ix+9)
	ld hl, (ix+6)
	pop ix
	pop ix
	pop ix
	pop ix
	pop ix
	ret