	assume	adl=1

	section	.text
	public	__bcttz
__bcttz:
	cp	a, 1
	require	__cttz_common

	section	.text
	private	__cttz_common
	; Input: A=byte, CF=(A==0)
	; Output: A=cttz(A)
__cttz_common:
	adc	a, a
	add	a, a
	jr	z, .high2
	add	a, a
	add	a, a
	jr	z, .high4
	add	a, a
	add	a, a
	jr	z, .high6
	add	a, a
	add	a, a
	sbc	a, -1
	ret	p
	ld	a, 8
	ret
.high6:
	sbc	a, -3
	ret
.high4:
	sbc	a, -5
	ret
.high2:
	sbc	a, -7
	ret

	section	.text
	public	__scttz
__scttz:
	xor	a, a
	or	a, l
	jr	nz, __cttz_common
	sub	a, h
	ccf
	require	__scttz.hijack

	section	.text
	private	__scttz.hijack
__scttz.hijack:
	call	__cttz_common
	add	a, 8
	ret

	section	.text
	public	__icttz
__icttz:
	xor	a, a
	require	__icttz.hijack

	section	.text
	private	__icttz.hijack
__icttz.hijack:
	or	a, l
	jr	nz, __cttz_common
	or	a, h
	jr	nz, __scttz.hijack
	dec	sp
	push	hl
	inc	sp
	pop	af
	call	__bcttz
	add	a, 16
	ret

	section	.text
	public	__lcttz
__lcttz:
	add	hl, de
	xor	a, a
	sbc	hl, de
	jr	nz, __icttz.hijack
	sub	a, e
	ccf
	call	__cttz_common
	add	a, 24
	ret

	section	.text
	public	__llcttz
__llcttz:
	add	hl, de
	xor	a, a
	sbc	hl, de
	jr	nz, __icttz.hijack
	ex	de, hl
	sbc	hl, de
	jr	nz, __i48cttz.hijack
	or	a, c
	jr	nz, .low
	sub	a, b
	ccf
	call	__cttz_common
	add	a, 56
	ret
.low:
	call	__cttz_common
	add	a, 48
	ret

	section	.text
	public	__i48cttz
__i48cttz:
	add	hl, de
	xor	a, a
	sbc	hl, de
	jr	nz, __icttz.hijack
	ex	de, hl
	require	__i48cttz.hijack

	section	.text
	private	__i48cttz.hijack
__i48cttz.hijack:
	call	__icttz.hijack
	ex	de, hl
	add	a, 24
	ret
