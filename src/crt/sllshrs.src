; Performs signed 48 bit ("short long long") bit shift right
; 
; Arguments:
; ude = Most significant bytes of arg 1
; uhl = Least significant bytes of arg 1
; ubc = Amount to shift by (effectively just shift by c)


; Returns:
; ude:uhl = ude:uhl>>c

	assume	adl=1

	section	.text
	public	__sllshrs
	public __sllshrs.midloop
__sllshrs:
	inc c
	dec c
	ret z
	push bc
	ld b, c
	push de
	push hl
.loop:
	ld hl, 5
	add hl, sp
	
	sra (hl)
	dec hl
.midloop: ; Used to enter from sllshru
	rr (hl)
	dec hl
	rr (hl)
	dec hl
	rr (hl)
	dec hl
	rr (hl)
	dec hl
	rr (hl)

	djnz .loop

	pop hl
	pop de
	pop bc
	ret