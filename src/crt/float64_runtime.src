	assume	adl=1

	section	.text

	public	__dadd, __dsub, __dmul, __ddiv, __drem
	public	__lltod,__ulltod, __dtof

;-------------------------------------------------------------------------------
; Arithmetic functions
;-------------------------------------------------------------------------------

__dadd:
	; f64_f64*_ret_f64
	push	af, iy
	ld	iy, 9
	add	iy, sp
	push	iy, bc, de, hl
	call	__dadd_c
	pop	af, af, af, af, iy, af
	ret
	
__dsub:
	; f64_f64*_ret_f64
	push	af, iy
	ld	iy, 9
	add	iy, sp
	push	iy, bc, de, hl
	call	__dsub_c
	pop	af, af, af, af, iy, af
	ret

__dmul:
	; f64_f64*_ret_f64
	push	af, iy
	ld	iy, 9
	add	iy, sp
	push	iy, bc, de, hl
	call	__dmul_c
	pop	af, af, af, af, iy, af
	ret

__ddiv:
	; f64_f64*_ret_f64
	push	af, iy
	ld	iy, 9
	add	iy, sp
	push	iy, bc, de, hl
	call	__ddiv_c
	pop	af, af, af, af, iy, af
	ret

__drem:
	; f64_f64*_ret_f64
	push	af, iy
	ld	iy, 9
	add	iy, sp
	push	iy, bc, de, hl
	call	__drem_c
	pop	af, af, af, af, iy, af
	ret

;-------------------------------------------------------------------------------
; Conversion functions
;-------------------------------------------------------------------------------

__dtof:
	; f64_ret_f32
	push	af, iy, bc, de, hl
	call	__dtof_c
	pop	af, af, af, iy, af
	ret

__lltod:
	; i64_ret_f64
	push	af, iy, bc, de, hl
	call	__lltod_c
	pop	af, af, af, iy, af
	ret

__ulltod:
	; u64_ret_f64
	push	af, iy, bc, de, hl
	call	__ulltod_c
	pop	af, af, af, iy, af
	ret

	extern	__dadd_c, __dsub_c, __dmul_c, __ddiv_c, __drem_c
	extern	__dtof_c, __lltod_c, __ulltod_c
