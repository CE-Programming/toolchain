	assume	adl=1

	section	.text

	public	_atoi

_atoi:
	pop	de
	ex	(sp), hl
	push	de
	; inlined isspace
.whitespace_loop:
	ld	a, (hl)
	inc	hl
	cp	a, 32
	jr	z, .whitespace_loop
	sub	a, 9
	add	a, -5
	jr	nc, .whitespace_loop

	; A = (HL - 1) - 9 + -5
	; A = (HL - 1) - 14
	xor	a, '-' - 14
	push	af
	jr	z, .minus_sign
	xor	a, ('+' - 14) xor ('-' - 14)
	jr	z, .plus_sign
	dec	hl
.plus_sign:
.minus_sign:
	; carry is cleared
	ex	de, hl
	sbc	hl, hl
	; DE = start of the digits
	; HL = 0
	jr	.start
.loop:
	; 21F + 4R + 3W + 1 per digit
	push	hl
	pop	bc
	add	hl, hl		; *= 2
	add	hl, hl		; *= 4
	add	hl, bc		; *= 5
	add	hl, hl		; *= 10
	ld	bc, 0
	ld	c, a
	add	hl, bc
	inc	de		; next digit
.start:
	ld	a, (de)
	sub	a, 48
	cp	a, 10
	jr	c, .loop
.finish:
	pop	af
	; carry is cleared
	ret	nz	; A != '-' positive
	; A == '-' negative
	jp	__ineg

	extern	__ineg
