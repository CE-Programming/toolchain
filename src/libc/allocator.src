	assume	adl=1

	section	.text
	public	_malloc, _free, _realloc

	public	_calloc
; void *calloc(size_t nmemb, size_t size)
_calloc:
	pop	de
	pop	bc
	ex	(sp), hl
	push	bc
	push	de
	call	__imulu
	push	hl
	push	hl
	call	_malloc
	pop	bc	; reset SP
	; test for NULL
	add	hl, bc
	xor	a, a
	sbc	hl, bc
	pop	bc	; BC = size
	ret	z	; return NULL
	; inlined bzero/memset
	cpi
	add	hl, bc
	ret	c	; size is zero
	dec	hl
	ld	(hl), a
	ret	po	; size is one
	push	hl
	pop	de
	dec	de
	lddr
	ret

if defined ALLOCATOR_SIMPLE

_malloc := __simple_malloc
_free := __simple_free
_realloc := __simple_realloc
	extern  __simple_free
	extern  __simple_malloc
	extern  __simple_realloc

else if defined ALLOCATOR_STANDARD

_malloc := __standard_malloc
_free := __standard_free
_realloc := __standard_realloc
	extern  __standard_malloc
	extern  __standard_free
	extern  __standard_realloc

else ; custom functions provided by the program

_malloc := __custom_malloc
_free := __custom_free
_realloc := __custom_realloc
	extern  __custom_malloc
	extern  __custom_free
	extern  __custom_realloc

end if

	extern	__imulu
	extern	_memset
