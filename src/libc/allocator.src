	assume	adl=1

	section	.text
	public	_malloc, _free, _realloc

	public	_calloc

if defined __TICE__

; uses the hardware specific $E40000 memory location

; void *calloc(size_t nmemb, size_t size)
_calloc:
	pop	de
	pop	bc
	ex	(sp), hl
	push	bc
	push	de
	call	__imulu
	push	hl
	push	hl
	call	_malloc
	pop	bc		; reset SP
	pop	bc		; BC = size
	; test for NULL
	add	hl, bc
	; or	a, a		; assumes that ptr + size does not overflow
	sbc	hl, bc
	ret	z		; return NULL
	; inlined bzero
	push	hl
	ex	de, hl		; DE = dest
	; test if the size is zero
	scf
	sbc	hl, hl
	add	hl, bc
	jr	nc, .finish
	; large region of all zeros on the Ti84CE
	ld	hl, $E40000	; HL = src
	ldir
.finish:
	pop	hl		; return value
	ret

else

; makes no hardware assumptions

; void *calloc(size_t nmemb, size_t size)
_calloc:
	pop	de
	pop	bc
	ex	(sp),hl
	push	bc
	push	de
	call	__imulu
	push	hl
	push	hl
	call	_malloc
	pop	de
	add	hl,de
	xor	a,a
	sbc	hl,de
	ld	e,a
	push	de
	push	hl
	call	nz,_memset
	pop	de
	pop	de
	pop	de
	ret

end if

if defined ALLOCATOR_SIMPLE

_malloc := __simple_malloc
_free := __simple_free
_realloc := __simple_realloc
	extern  __simple_free
	extern  __simple_malloc
	extern  __simple_realloc

else if defined ALLOCATOR_STANDARD

_malloc := __standard_malloc
_free := __standard_free
_realloc := __standard_realloc
	extern  __standard_malloc
	extern  __standard_free
	extern  __standard_realloc

else ; custom functions provided by the program

_malloc := __custom_malloc
_free := __custom_free
_realloc := __custom_realloc
	extern  __custom_malloc
	extern  __custom_free
	extern  __custom_realloc

end if

	extern	__imulu
	extern	_memset
