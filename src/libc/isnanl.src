	assume	adl=1

	section	.text

	public	__isnanl

; adapted from fpclassify.src

if 1
; int _isnanl(long double)
__isnanl:
	pop	bc, hl, de
	or	a, a
	adc	hl, de
	pop	de
	push	bc, bc, bc, bc
	ld	a, e
	jr	nz, .mant_nonzero	; normal, subnormal, or NaN
	jr	c, .mant_nonzero	; normal, subnormal, or NaN
	tst	a, $0F
	jr	nz, .mant_nonzero	; normal, subnormal, or NaN
	sbc	hl, hl	; normal, or subnormal
	ret
.mant_nonzero:
	or	a, a
	sbc	hl, hl
	rra
	and	a, $78
	res	7, d
	add	a, d
	ret	z	; subnormal
	inc	l
	add	a, -($78 + $7F)
	ret	z	; NaN
	dec	l	; normal
	ret

else

; int _isnanl(long double)
__isnanl:
    ; load upper 24bits
    ld    hl, 8    
    add    hl, sp
    ld    hl, (hl)
    ; clear signbit
    add    hl, hl
    ; test for inf/NaN
    ld    de, $2000
    add    hl, de
    jr    c, .exp_all_ones
    sbc    hl, hl
    ret
.exp_all_ones:
    ld a, h
    and a, $1E    ; most common NaN
    jr    nz, .upper_mantissa_nan
    ; infinity or uncommon NaN
    pop    bc, hl, de
    push    de, hl, bc
    ; __i48cmpzero
    add    hl, de
    or    a, a
    sbc    hl, de
    jr    nz, .lower_mantissa_nan
    ex    de, hl
    ; hl was zero, so the carry flag cannot have been set
    sbc    hl, de
    jr    nz, .lower_mantissa_nan
    ret    ; infinity

.lower_mantissa_nan:
    or    a, a
.upper_mantissa_nan:
    sbc    hl, hl
    inc    hl
    ret

end if
